name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest twine sonar-scanner  # Add SonarQube scanner and other required tools
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: SonarQube Analysis
      run: |
        sonar-scanner \
          -Dsonar.login=${{ secrets.SONARQUBE_LOGIN }} \
          -Dsonar.projectBaseDir=${{ github.workspace }} \
          -Dsonar.properties=./sonar/sonar.properties

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Upload to Nexus
        run: |
          twine upload --repository-url ${{ secrets.NEXUS_REPO_URL }} dist/*  # Upload package to Nexus

      - name: Deploy to Tomcat
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} myapp.war user@your-tomcat-server:/path/to/tomcat/webapps/
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-tomcat-server 'systemctl restart tomcat'
